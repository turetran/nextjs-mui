import type { NextPage } from 'next'
import Head from 'next/head'
import { Chessboard } from 'react-chessboard';
import { useState, useRef } from 'react';
import * as ChessJS from 'chess.js';
import { Typography } from '@mui/material';
import { Box } from '@mui/material';
import { useRouter } from 'next/router';
import { styled } from '@mui/material/styles';
import Breadcrumbs from '@mui/material/Breadcrumbs';
import Link from 'next/link';
import MuiLink from '@mui/material/Link'
import StairsIcon from '@mui/icons-material/Stairs';
import { texti18n } from '../../../utils/i18nCommon';
import { chessEndgameBeginner } from '../../../utils/chessEndgameBeginner';
import {Main, CenterBox} from 'pages/_app'

const CusHeadTypo = styled(Typography)({
  marginTop: 5,
  fontWeight: 'bold'
})

const CusNoteType = styled(Typography)({
  marginTop: 5,
  textIndent: 30,
  textAlign: "justify",
  backgroundColor: 'lightgray',
})

const CusTypo = styled(Typography)({
  marginTop: 5,
  textIndent: 30,
  textAlign: "justify",
})

const CusFigureTypo = styled(Typography)({
  marginTop: 5,
  fontStyle: 'italic',
})

const BoardBox = styled('div')({
  display: 'flex',
  flexDirection: 'row',
  justifyContent: 'center',
  marginTop: 25,
})

const FigureTextBox = styled('div')({
  display: 'flex',
  flexDirection: 'row',
  justifyContent: 'center',
})

const EndGameBeginner: NextPage = () => {

  const { locale } = useRouter()
  const _lc = locale || 'vn'

  const chessboardRef: any = useRef();
  const Chess = typeof ChessJS === "function" ? ChessJS : ChessJS.Chess;
  const [game, setGame] = useState(new Chess());

  function safeGameMutate(modify: any) {
    setGame((g) => {
      const update = { ...g };
      modify(update);
      return update;
    });
  }

  function makeRandomMove() {
    const possibleMoves = game.moves();
    if (game.game_over() || game.in_draw() || possibleMoves.length === 0) return; // exit if the game is over
    const randomIndex = Math.floor(Math.random() * possibleMoves.length);
    safeGameMutate((game: any) => {
      game.move(possibleMoves[randomIndex]);
    });
  }

  function onDrop(sourceSquare: any, targetSquare: any) {
    let move = null;
    safeGameMutate((game: any) => {
      move = game.move({
        from: sourceSquare,
        to: targetSquare,
        promotion: 'q' // always promote to a queen for example simplicity
      });
    });
    if (move === null) return false; // illegal move
    setTimeout(makeRandomMove, 200);
    return true;
  }

  return <div>
    <Head>
      <title>{texti18n[_lc].document}</title>
      <meta name="description" content="Generated by TT" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Box display={'flex'}
      justifyContent={"center"}
      alignItems={"center"}
    >
      <Box
        maxWidth={720}
        style={{ border: "0px solid blue", marginRight: 5 }}
      >
        <Breadcrumbs aria-label="breadcrumb">
          <Link href='/' passHref><MuiLink underline='hover' style={{ cursor: "pointer" }}>{texti18n[_lc].home}</MuiLink></Link>
          <Link href='/chess' passHref><MuiLink underline='hover' style={{ cursor: "pointer" }}>{texti18n[_lc].chess}</MuiLink></Link>
          <Link href='/chess/endgame' passHref><MuiLink underline='hover' style={{ cursor: "pointer" }}>{texti18n[_lc].endGame}</MuiLink></Link>
          <Link href='/chess/endgame/beginner' passHref><MuiLink underline='hover' style={{ cursor: "pointer" }}>{texti18n[_lc].beginner} (0 - 999)</MuiLink></Link>
        </Breadcrumbs>

        <CusHeadTypo variant='h4'>{chessEndgameBeginner[_lc].introduce}</CusHeadTypo>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].text1 }} />
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].text2 }} />
        <CusHeadTypo variant='h4'>{chessEndgameBeginner[_lc].staircase} <StairsIcon /></CusHeadTypo>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].text3 }} />
        <CusHeadTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].st1}}/>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={1}
            position={"3k4/8/8/8/4K3/8/8/8"}
            areArrowsAllowed={false}
            arePiecesDraggable={false}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo style={{ marginTop: 5 }}>{chessEndgameBeginner[_lc].figure1}</CusFigureTypo>
        </FigureTextBox>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={2}
            position={"8/8/k7/8/4K3/8/8/8"}
            areArrowsAllowed={false}
            arePiecesDraggable={false}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo>{chessEndgameBeginner[_lc].figure2}</CusFigureTypo>
        </FigureTextBox>
        <CusHeadTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule2}}/>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={3}
            position={"8/2k5/6R1/8/8/4K3/8/5Q2"}
            areArrowsAllowed={true}
            arePiecesDraggable={false}
            customArrows={[["f6", "a6"]]}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo>{chessEndgameBeginner[_lc].fig3}</CusFigureTypo>
        </FigureTextBox>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule2Text1}}/>
        <CusHeadTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule3}}/>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={3}
            position={"8/2k2Q2/6R1/8/8/4K3/8/8"}
            areArrowsAllowed={true}
            arePiecesDraggable={false}
            customArrows={[["f6", "a6"]]}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo style={{ marginTop: 5 }}>{chessEndgameBeginner[_lc].fig4}</CusFigureTypo>
        </FigureTextBox>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule3Text1}}/>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={3}
            position={"2k5/5Q2/6R1/8/8/4K3/8/8"}
            areArrowsAllowed={true}
            arePiecesDraggable={false}
            customArrows={[["e7", "a7"]]}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo>{chessEndgameBeginner[_lc].fig5}</CusFigureTypo>
        </FigureTextBox>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule3Text2}}/>
        <BoardBox>
          <Chessboard
            key="chessboard1"
            id={3}
            position={"2k3R1/5Q2/8/8/8/4K3/8/8"}
            areArrowsAllowed={true}
            arePiecesDraggable={false}
            customArrows={[["e7", "a7"]]}
            boardWidth={300}
            showBoardNotation={true}
            onPieceDrop={onDrop}
            ref={chessboardRef}
          />
        </BoardBox>
        <FigureTextBox>
          <CusFigureTypo>
            {chessEndgameBeginner[_lc].fig6}
          </CusFigureTypo>
        </FigureTextBox>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule3Text3}}/>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].stRule3Text4}}/>

        {//The box
        }
        <CusHeadTypo variant='h4' dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].theBox}}/>
        <CusTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].boxText1}}/>
        <CusHeadTypo dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].boxText2}}/>
        <CusNoteType dangerouslySetInnerHTML={{ __html: chessEndgameBeginner[_lc].boxAdvice}}/>
      </Box>
    </Box>
  </div>
}

export default EndGameBeginner
